<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.ecnu.mapper.MistakeAudioMapper">
  <resultMap id="BaseResultMap" type="net.ecnu.model.MistakeAudioDO">
    <!--@mbg.generated-->
    <!--@Table mistake_audio-->
    <id column="mistake_id" jdbcType="BIGINT" property="mistakeId" />
    <result column="topic_cps_id" jdbcType="INTEGER" property="topicCpsId" />
    <result column="cpsrcd_id" jdbcType="VARCHAR" property="cpsrcdId" />
    <result column="mistake_type" jdbcType="INTEGER" property="mistakeType" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="error_sum" jdbcType="INTEGER" property="errorSum" />
    <result column="del_flg" jdbcType="BOOLEAN" property="delFlg" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    mistake_id, topic_cps_id, cpsrcd_id, mistake_type, user_id, error_sum, del_flg, create_time,
    update_time
  </sql>
  <select id="selectByExample" parameterType="net.ecnu.model.MistakeAudioDOExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mistake_audio
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from mistake_audio
    where mistake_id = #{mistakeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from mistake_audio
    where mistake_id = #{mistakeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.ecnu.model.MistakeAudioDOExample">
    <!--@mbg.generated-->
    delete from mistake_audio
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="mistake_id" keyProperty="mistakeId" parameterType="net.ecnu.model.MistakeAudioDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mistake_audio (topic_cps_id, cpsrcd_id, mistake_type,
    user_id, error_sum, del_flg,
    create_time, update_time)
    values (#{topicCpsId,jdbcType=INTEGER}, #{cpsrcdId,jdbcType=VARCHAR}, #{mistakeType,jdbcType=INTEGER},
    #{userId,jdbcType=VARCHAR}, #{errorSum,jdbcType=INTEGER}, #{delFlg,jdbcType=BOOLEAN},
    #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="mistake_id" keyProperty="mistakeId" parameterType="net.ecnu.model.MistakeAudioDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mistake_audio
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="topicCpsId != null">
        topic_cps_id,
      </if>
      <if test="cpsrcdId != null">
        cpsrcd_id,
      </if>
      <if test="mistakeType != null">
        mistake_type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="errorSum != null">
        error_sum,
      </if>
      <if test="delFlg != null">
        del_flg,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="topicCpsId != null">
        #{topicCpsId,jdbcType=INTEGER},
      </if>
      <if test="cpsrcdId != null">
        #{cpsrcdId,jdbcType=VARCHAR},
      </if>
      <if test="mistakeType != null">
        #{mistakeType,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="errorSum != null">
        #{errorSum,jdbcType=INTEGER},
      </if>
      <if test="delFlg != null">
        #{delFlg,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.ecnu.model.MistakeAudioDOExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from mistake_audio
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update mistake_audio
    <set>
      <if test="record.mistakeId != null">
        mistake_id = #{record.mistakeId,jdbcType=BIGINT},
      </if>
      <if test="record.topicCpsId != null">
        topic_cps_id = #{record.topicCpsId,jdbcType=INTEGER},
      </if>
      <if test="record.cpsrcdId != null">
        cpsrcd_id = #{record.cpsrcdId,jdbcType=VARCHAR},
      </if>
      <if test="record.mistakeType != null">
        mistake_type = #{record.mistakeType,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.errorSum != null">
        error_sum = #{record.errorSum,jdbcType=INTEGER},
      </if>
      <if test="record.delFlg != null">
        del_flg = #{record.delFlg,jdbcType=BOOLEAN},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update mistake_audio
    set mistake_id = #{record.mistakeId,jdbcType=BIGINT},
    topic_cps_id = #{record.topicCpsId,jdbcType=INTEGER},
    cpsrcd_id = #{record.cpsrcdId,jdbcType=VARCHAR},
    mistake_type = #{record.mistakeType,jdbcType=INTEGER},
    user_id = #{record.userId,jdbcType=VARCHAR},
    error_sum = #{record.errorSum,jdbcType=INTEGER},
    del_flg = #{record.delFlg,jdbcType=BOOLEAN},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.ecnu.model.MistakeAudioDO">
    <!--@mbg.generated-->
    update mistake_audio
    <set>
      <if test="topicCpsId != null">
        topic_cps_id = #{topicCpsId,jdbcType=INTEGER},
      </if>
      <if test="cpsrcdId != null">
        cpsrcd_id = #{cpsrcdId,jdbcType=VARCHAR},
      </if>
      <if test="mistakeType != null">
        mistake_type = #{mistakeType,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="errorSum != null">
        error_sum = #{errorSum,jdbcType=INTEGER},
      </if>
      <if test="delFlg != null">
        del_flg = #{delFlg,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where mistake_id = #{mistakeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.ecnu.model.MistakeAudioDO">
    <!--@mbg.generated-->
    update mistake_audio
    set topic_cps_id = #{topicCpsId,jdbcType=INTEGER},
    cpsrcd_id = #{cpsrcdId,jdbcType=VARCHAR},
    mistake_type = #{mistakeType,jdbcType=INTEGER},
    user_id = #{userId,jdbcType=VARCHAR},
    error_sum = #{errorSum,jdbcType=INTEGER},
    del_flg = #{delFlg,jdbcType=BOOLEAN},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP}
    where mistake_id = #{mistakeId,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update mistake_audio
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="topic_cps_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when mistake_id = #{item.mistakeId,jdbcType=BIGINT} then #{item.topicCpsId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="cpsrcd_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when mistake_id = #{item.mistakeId,jdbcType=BIGINT} then #{item.cpsrcdId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="mistake_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when mistake_id = #{item.mistakeId,jdbcType=BIGINT} then #{item.mistakeType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when mistake_id = #{item.mistakeId,jdbcType=BIGINT} then #{item.userId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="error_sum = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when mistake_id = #{item.mistakeId,jdbcType=BIGINT} then #{item.errorSum,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="del_flg = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when mistake_id = #{item.mistakeId,jdbcType=BIGINT} then #{item.delFlg,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when mistake_id = #{item.mistakeId,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when mistake_id = #{item.mistakeId,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where mistake_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.mistakeId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="mistake_id" keyProperty="mistakeId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mistake_audio
    (topic_cps_id, cpsrcd_id, mistake_type, user_id, error_sum, del_flg, create_time,
    update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.topicCpsId,jdbcType=INTEGER}, #{item.cpsrcdId,jdbcType=VARCHAR}, #{item.mistakeType,jdbcType=INTEGER},
      #{item.userId,jdbcType=VARCHAR}, #{item.errorSum,jdbcType=INTEGER}, #{item.delFlg,jdbcType=BOOLEAN},
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>

  <select id="selectMistakeTotal" resultType="java.lang.Integer">
    select
      count(DISTINCT cpsrcd_id)
    from
      mistake_audio
    where
      user_id = #{userId,jdbcType=VARCHAR} and del_flg = 0
  </select>

  <select id="selectStubbornMistakeNumber" resultType="java.lang.Integer">
    select
      count(DISTINCT cpsrcd_id)
    from
      mistake_audio
    where user_id = #{userId,jdbcType=VARCHAR} and error_sum > 1 and  del_flg = 0
  </select>


  <select id="selectEachMistakeTypeData" resultType="net.ecnu.model.vo.MistakeTypeVO">
    select
      count(DISTINCT cpsrcd_id) AS mistakeNum,
      mistake_type AS mistakeTypeCode
    from
      mistake_audio
    where
      del_flg = 0 and user_id = #{userId,jdbcType=VARCHAR}
    group by user_id,mistake_type
  </select>

  <select id="selectEachMistakeTypeDataNearWeek" resultType="net.ecnu.model.vo.MistakeTypeVO">
    select
      count(DISTINCT cpsrcd_id) AS mistakeNum,
      mistake_type AS mistakeTypeCode
    from
      mistake_audio
    where
      del_flg = 0 and user_id = #{userId,jdbcType=VARCHAR}
      and create_time BETWEEN DATE_SUB(NOW(), INTERVAL 7 DAY) AND NOW()
    group by user_id,mistake_type
  </select>

  <select id="getCpsrcdIdByUserIdAndMistakeType" resultType="net.ecnu.model.dto.MistakeInfoDto">
    select
      cpsrcd_id AS cpsrcdId,
      topic_cps_id AS topicCpsId
    from
      mistake_audio
    where
      del_flg = 0 and user_id = #{userId,jdbcType=VARCHAR}
      and mistake_type = #{mistakeTypeCode,jdbcType=INTEGER}
    <if test="oneWeekKey.intValue() != 0">
      and create_time BETWEEN DATE_SUB(NOW(), INTERVAL 7 DAY) AND NOW()
    </if>
    group by cpsrcd_id
  </select>

  <select id="getMistakesInfo" resultType="net.ecnu.model.vo.MistakesVO">
    select
		rcd.id AS cpsrcdId,
        "随机一题" AS description,
		rcd.eval_mode AS evalModel,
		rcd.type AS type,
        CONVERT(rcd.difficulty, CHAR) AS difficulty,
        1 AS enablePinYin,
		rcd.pinyin AS pinyin,
		rcd.ref_text AS refText,
		rcd.audio_url AS audioUrl
    from
        cpsrcd rcd
    where
        rcd.del = 0
    and
        rcd.id IN
    <foreach collection="mistakeInfoList" item="mistakeInfo" open="(" close=")" separator=",">
        #{mistakeInfo.cpsrcdId,jdbcType=VARCHAR}
    </foreach>
    GROUP BY cpsrcdId
  </select>

  <update id="cleanMistakeByCpsrcdId">
    update
      mistake_audio
    set
      del_flg = 1
    where del_flg = 0 and user_id = #{userId,jdbcType=VARCHAR}
      and cpsrcd_id = #{cpsrcdId,jdbcType=VARCHAR}
      and cpsgrp_id = #{cpsgrpId,jdbcType=VARCHAR}
  </update>

  <update id="addWrongNumByCpsrcdId">
    update
      mistake_audio
    set
      error_sum = error_sum + 1
    where del_flg = 0 and user_id = #{userId,jdbcType=VARCHAR}
      and cpsrcd_id = #{cpsrcdId,jdbcType=VARCHAR}
      and cpsgrp_id = #{cpsgrpId,jdbcType=VARCHAR}
  </update>

  <select id="getQuestionType" resultType="java.lang.String">
    select
      type
    from
      cpsrcd
    where
      id = #{cpsrcdId,jdbcType=VARCHAR}
  </select>

  <select id="getGrpMistakesInfo" resultType="net.ecnu.model.vo.MistakesVO">
    select
        rcd.id AS cpsrcdId,
        t.cpsgrp_id AS cpsgrpId,
        tc.id AS topicCpsId,
        (CASE
        WHEN (t.id IS NULL OR t.id = '')  THEN ''
        ELSE
        CONCAT(grp.description,t.title,"第",tc.c_num,"题")
        END) AS description,
        IFNULL(tc.topic_id,'') AS topicId,
        t.title AS topicTitle,
        tc.c_num AS cNum,
        rcd.eval_mode AS evalModel,
        rcd.type AS type,
        CONVERT(rcd.difficulty, CHAR) AS difficulty,
        tc.score AS score,
        tc.enable_pinyin AS enablePinYin,
        rcd.pinyin AS pinyin,
        rcd.ref_text AS refText,
        rcd.audio_url AS audioUrl
    from
        cpsrcd rcd
    LEFT JOIN
        topic_cps tc ON rcd.id = tc.cpsrcd_id
    LEFT JOIN
        topic t ON t.id = tc.topic_id
    LEFT JOIN
        cpsgrp grp ON t.cpsgrp_id = grp.id AND grp.del = 0
    where
        rcd.del = 0
    and
    <foreach collection="topicCpsrcdList" item="mistakeInfo" open="(" close=")" separator=" or ">
      ( rcd.id = #{mistakeInfo.cpsrcdId,jdbcType=VARCHAR} AND tc.id = #{mistakeInfo.topicCpsId,jdbcType=INTEGER} )
    </foreach>
    GROUP BY cpsrcdId
  </select>

  <select id="getMistakesInfoByCpsrcdIdOrTopcpsId" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from
      mistake_audio
    where
      del_flg = 0
    and
      user_id = #{userId,jdbcType=VARCHAR}
    <if test="topicCpsDO.cpsrcdId != null and topicCpsDO.cpsrcdId != ''">
      and cpsrcd_id = #{topicCpsDO.cpsrcdId,jdbcType=VARCHAR}
    </if>
    <if test="topicCpsDO.id != null">
      and topic_cps_id = #{topicCpsDO.id,jdbcType=INTEGER}
    </if>
  </select>
</mapper>